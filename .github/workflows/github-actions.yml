name: Node.js CI

on: [pull_request]

jobs:
  check_changed_folders:
    name: Check files
    outputs:
      run_container: ${{ steps.check_files.outputs.run_container }}
      run_hometown: ${{ steps.check_files.outputs.run_hometown }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt

          echo "::set-output name=run_container::false"
          echo "::set-output name=run_hometown::false"

          while IFS= read -r file
          do
            if [[ $file == container/* ]]; then
              echo "Changes detected in container folder"
              echo "::set-output name=run_container::true"
            fi
            if [[ $file == hometown/* ]]; then
              echo "Changes detected in hometown folder"
              echo "::set-output name=run_hometown::true"
            fi
          done < files.txt

  find_pr:
    name: Get PR number
    needs: check_changed_folders
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
      - run: echo PR is ${PR}
        if: success() && steps.findPr.outputs.number
        env:
          PR: ${{ steps.findPr.outputs.pr }}
    outputs:
      pr: ${{ steps.findPr.outputs.pr }}

  # destroys:
  #   name: Tear down stacks on merge
  #   needs: find_pr
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
  #   steps:
  #     - name: Teardown PR env

  container_job:
    name: Deploy Container MFE
    needs: find_pr
    if: needs.check_changed_folders.outputs.run_container == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install CDK dependencies
        run: npm --prefix container/cdk install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::586890172263:role/PipelineStack-PipelineStackassumablerole1EF5FD52-1O83EXDV8J4J5
          aws-region: us-west-2

      - name: Deploy
        run: 'npm --prefix container/cdk run deploy pr${{needs.find_pr.outputs.pr}}'

      - name: Read outputs.json
        id: outputs
        uses: juliangruber/read-file-action@v1
        with:
          path: container/cdk/outputs.json

      - name: Comment PR
        uses: actions/github-script@0.3.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: '${{ steps.outputs.outputs.content }}' });

  hometown_job:
    name: Deploy Hometown MFE
    needs: find_pr
    if: needs.check_changed_folders.outputs.run_hometown == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install CDK dependencies
        run: npm --prefix hometown/cdk install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::586890172263:role/PipelineStack-PipelineStackassumablerole1EF5FD52-1O83EXDV8J4J5
          aws-region: us-west-2

      - name: Deploy
        run: 'npm --prefix hometown/cdk run deploy pr${{needs.find_pr.outputs.pr}}'

      - name: Comment PR
        uses: actions/github-script@0.3.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number, owner, repo, body: 'Hello world ! ðŸ‘‹' });
